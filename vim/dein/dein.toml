[[plugins]]
repo = 'Shougo/dein.vim'
[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
let g:deoplete#enable_at_startup = 1
'''

[[plugins]]
repo = 'itchyny/vim-cursorword'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = 'context_filetype.vim'
on_event = 'InsertEnter'
hook_source = '''
'''
hook_add = '''
let g:deoplete#enable_at_startup = 1
'''

# filer {{{
[[plugins]]
repo = 'Shougo/vimfiler'
hook_add = '''
let g:vimfiler_as_default_explorer=1
let g:vimfiler_ignore_pattern = ['^\.git$', '^\.DS_Store$']
'''
# }}}
#operator {{{
[[plugins]]
repo = 'kana/vim-operator-user'
[[plugins]]
repo = 'rhysd/vim-operator-surround'
hook_add = '''
map <silent>sa <Plug>(operator-surround-append)
map <silent>sd <Plug>(operator-surround-delete)
map <silent>sr <Plug>(operator-surround-replace)
'''
[[plugins]]
repo = 'osyo-manga/vim-operator-stay-cursor'
[[plugins]]
repo = 'kana/vim-operator-replace'
hook_add = '''
map R <Plug>(operator-replace)
'''
# }}}
# textobj {{{ 
[[plugins]]
repo = 'kana/vim-textobj-user'
[[plugins]]
repo = 'thinca/vim-textobj-between'
hook_add = '''
omap if <Plug>(textobj-between-i)
omap af <Plug>(textobj-between-a)
vmap if <Plug>(textobj-between-i)
vmap af <Plug>(textobj-between-a)
'''
[[plugins]] # il al
repo = 'kana/vim-textobj-line'
[[plugins]] # iz az
repo = 'kana/vim-textobj-fold'
[[plugins]]
repo = 'gcmt/wildfire.vim'
hook_add='''
let g:wildfire_objects = {
    \ "html,xml" : ["at", "it"],
\ }
'''
# }}}
# execute {{{
[[plugins]]
repo = 'thinca/vim-quickrun'
[[plugins]]
repo = 'tyru/open-browser.vim'
hook_add = '''
let g:netrw_nogx = 1 " disable netrw's gx mapping.
nmap gx <Plug>(openbrowser-smart-search)
vmap gx <Plug>(openbrowser-smart-search)
'''
[[plugins]]
repo = 'kannokanno/previm'
hook_add = '''
au BufRead,BufNewFile *.md set filetype=markdown
let g:previm_enable_realtime  = 1
'''
# }}}

# lazyにはできなかった
[[plugins]]
repo = 'kana/vim-submode'
hook_add = '''
call submode#enter_with('bufmove', 'n', '', 's>', '<C-w>>')
call submode#enter_with('bufmove', 'n', '', 's<', '<C-w><')
call submode#enter_with('bufmove', 'n', '', 's+', '<C-w>+')
call submode#enter_with('bufmove', 'n', '', 's-', '<C-w>-')
call submode#map('bufmove', 'n', '', '>', '<C-w>>')
call submode#map('bufmove', 'n', '', '<', '<C-w><')
call submode#map('bufmove', 'n', '', '+', '<C-w>+')
call submode#map('bufmove', 'n', '', '-', '<C-w>-')
'''
# view {{{
[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
let g:indent_guides_enable_on_vim_startup=1
let g:indent_guides_auto_colors=0
let g:indent_guides_exclude_filetypes=['help', 'man']
autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  guibg=gray ctermbg=248
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven guibg=darkgray ctermbg=240
let g:indent_guides_guide_size=3
'''
[[plugins]]
repo = 'itchyny/lightline.vim'
[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
let g:ale_sign_column_always = 1

let g:ale_fixers = {
      \ 'javascript': ['prettier'],
      \ 'typescript': ['prettier'],
      \ 'html': ['prettier'],
      \ 'vue': ['prettier']
      \ }
let g:ale_fix_on_save = 1
let g:ale_javascript_prettier_use_local_config = 1
'''
[[plugins]]
repo = 'luochen1990/rainbow'
hook_add = '''
let g:rainbow_active = 1 
'''
# }}}
# syntax {{{

#遅いので一旦コメントアウト
# [[plugins]] # カーソル位置のコンテキストに合わせてftを切り替える
# repo = 'osyo-manga/vim-precious'
# on_i = 1
# depends = ['context_filetype.vim']
# hook_add = '''
# let g:precious_enable_switch_CursorMoved = { '*': 1, 'help':0 }
# INSERTモードのON／OFFに合わせてトグル
# autocmd MyAutoCmd InsertEnter * :PreciousSwitch
# autocmd MyAutoCmd InsertLeave * :PreciousReset
# '''

# }}}

# speed {{{
[[plugins]]
repo = 'itchyny/vim-parenmatch'
hook_source = '''
let g:loaded_matchparen = 1
'''
# }}}

# git {{{
[[plugins]]
repo = 'hotwatermorning/auto-git-diff'
hook_add = '''
let g:auto_git_diff_show_window_at_right=1
'''
#}}}


# fold
[[plugins]]
repo = 'Konfekt/FastFold'

# not use
[[plugins]] #session
repo = 'tpope/vim-obsession'


[[plugins]]
repo = 'autozimu/LanguageClient-neovim'
depends = 'deoplete.nvim'
rev = 'next'
build = './install.sh'
hook_source='''
let g:LanguageClient_serverCommands = {
    \ 'vue': ['vls']
    \}
let g:LanguageClient_autoStart = 1
'''
[[plugins]]
repo = "iCyMind/NeoSolarized"
hook_add='''
set background=dark
" colorscheme 設定は source 後に行う必要があるので確実に読まれている VimEnter のタイミングで行う。
" 但し Colorscheme イベントの発生が抑制されないよう nensed を付ける。
au MyAutoCmd VimEnter * nested colorscheme NeoSolarized
'''
# search {{{
[[plugins]]
repo = 'haya14busa/incsearch.vim'
hook_add = '''
map /  <Plug>(incsearch-forward)
map ?  <Plug>(incsearch-backward)
map g/  <Plug>(incsearch-stay)
'''
# }}}
